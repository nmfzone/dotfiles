#################### NginX Server SettingUp Aliases ####################
laravelnewserver()
{
	if [[ -z $1 ]] ; then
		echo "Masukan Nama File!"
	else
		sudo cp /etc/nginx/sites-available/laravel-default /etc/nginx/sites-available/$1.nmflocal
		sudo ln -s /etc/nginx/sites-available/$1.nmflocal /etc/nginx/sites-enabled/$1.nmflocal
		sudo sed -i 's|the_folder|'"$2"'|g' /etc/nginx/sites-available/$1.nmflocal
		sudo sed -i 's/the_server/'"$1"'/g' /etc/nginx/sites-enabled/$1.nmflocal
		sudo echo '127.0.0.1   '"$1"'.nmflocal.io' | sudo tee --append /etc/hosts > /dev/null
	fi
}
phpnewserver()
{
	if [[ -z $1 ]] ; then
		echo "Masukan Nama Server!"
	elif [[ -z $2 ]] ; then
		echo "Masukan Lokasi Projectnya! (/var/www/the_folder/public)"
	else
		sudo cp /etc/nginx/sites-available/php-default /etc/nginx/sites-available/$1.nmflocal
		sudo ln -s /etc/nginx/sites-available/$1.nmflocal /etc/nginx/sites-enabled/$1.nmflocal
		sudo sed -i 's|the_folder|'"$2"'|g' /etc/nginx/sites-available/$1.nmflocal
		sudo sed -i 's/the_server/'"$1"'/g' /etc/nginx/sites-available/$1.nmflocal
		sudo echo '127.0.0.1   '"$1"'.nmflocal.io' | sudo tee --append /etc/hosts > /dev/null
	fi
}
edittheserver()
{
	if [[ -z $1 ]] ; then
		echo "Masukan Nama Server!"
	else
		sudo subl /etc/nginx/sites-available/$1.nmflocal
	fi
}
removetheserver()
{
	if [[ -z $1 ]] ; then
		echo "Masukan Nama Server!"
	else
		sudo rm /etc/nginx/sites-available/$1.nmflocal
		sudo rm /etc/nginx/sites-enabled/$1.nmflocal
		sudo sed -i '/127.0.0.1   '"$1"'.nmflocal.io/d' /etc/hosts > /dev/null
	fi
}
symlinkstheserver()
{
	sudo ln -sf ~/Programming/PHP/MyServer/* /var/www
	sudo chmod -R 755 /var/www
	sudo chown -R $USER:$USER /var/www
}
#refreshMyServerSymlinks()
#{
#	sudo
#}


#################### Another Complex Function ####################

createNewGithubRepository() {
	repo_name=$1
	repo_desc=$2

	dir_name=`basename $(pwd)`

	if [ "$repo_name" = "" ]; then
		echo "Nama Repository (Enter untuk pakai '$dir_name')?"
		read repo_name
	fi

	if [ "$repo_name" = "" ]; then
		repo_name=$dir_name
	fi

	if [ "$repo_desc" = "" ]; then
		repo_desc="Github Repository by me"
	fi

	username=`git config user.name`
	if [ "$username" = "" ]; then
		echo "Could not find username, run 'git config --global user.name <username>'"
		invalid_credentials=1
	fi

	token=`git config user.token`
	if [ "$token" = "" ]; then
		echo "Could not find token, run 'git config --global user.token <token>'"
		invalid_credentials=1
	fi

	if [ "$invalid_credentials" == "1" ]; then
		return 1
	fi

	if [ ! -f .gitignore ]; then
		cp ~/Programming/Github/Defaults/.gitignore .gitignore
	fi
	if [ ! -f README.md ]; then
		cp ~/Programming/Github/Defaults/README.md README.md
		echo "$repo_name is $repo_desc" >> README.md > /dev/null 2>&1
	fi

	echo -n "Creating Github repository '$repo_name' ..."
	curl -u "$username:$token" https://api.github.com/user/repos -d '{"name":"'$repo_name'", "description":"'$repo_desc'"}' > /dev/null 2>&1
	echo " done."

	echo -n "Pushing local code to remote ..."
	git init > /dev/null 2>&1
	git add . > /dev/null 2>&1
	git commit -m "First commit" > /dev/null 2>&1
	git remote add origin git@github.com:$username/$repo_name.git > /dev/null 2>&1
	git push -u origin master > /dev/null 2>&1
	echo " done."
}